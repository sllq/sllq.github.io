{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","cats","require","$","document","ready","click","this","fadeOut","fadeIn","rgbToHex","rgb","hex","Number","toString","length","on","r","Math","floor","random","g","b","bgColor","text","css","queue","react_default","a","createElement","className","id","href","class","target","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd5a9587.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nimport 'cat-ascii-faces';\n// import {Animated} from 'react-animated-css'; animation lib \n\n\nclass App extends Component {\n  render() {\nvar cats = require('cat-ascii-faces');\n\n// jquery animation\n$(document).ready(function(){\n  $('#id1').click(function(){\n    $( this ).fadeOut(1555 , function() {\n      $('#id2').fadeIn(1555);\n    });\n  });\n  $('#id2').click(function(){\n    $( this ).fadeOut(1555 , function() {\n      $('#id3').fadeIn(1555);\n    });\n  });\n  $('#id3').click(function(){\n    $( this ).fadeOut(1555, function() {\n      $('#id1').fadeIn(1555);\n    });\n  });\n});\n//\n\nvar rgbToHex = function (rgb) { \n  var hex = Number(rgb).toString(16);\n  if (hex.length < 2) {\n       hex = '0' + hex;\n  }\n  return hex;\n};\n\n//jquery hover\n$(document).ready(function(){\n  $('#cats').on('click mouseover', (function() {\n    var r = Math.floor(Math.random() * 256);\n    var g = Math.floor(Math.random() * 256);\n    var b = Math.floor(Math.random() * 256);\n    var bgColor = '#' + rgbToHex(r)+rgbToHex(g)+rgbToHex(b);\n    $( this ).text(cats());\n    $( this ).css('background-color', bgColor);\n    $( this ).queue(function() {\n      $( this ).css('background-color', bgColor);\n    });\n  }));\n});\n//\n    return (\n    <div className='App'>\n      <section>\n          <div className='slideshow animated fadeInLeft'>\n            <div id='id1' className='about-image'>\n              <div className='caption-text'>Fasion is my proffesion</div>\n            </div>\n            <div id='id2' className='about-image hidden'>\n              <div className = 'caption-text'></div>\n            </div>\n            <div id='id3' className='about-image hidden'>\n              <div className = 'caption-text'>{cats()}</div>\n            </div>\n          </div>\n          <div className='scrolling'>\n          <div className='animated fadeInRight delay-1s about-text pull-left header'>\n          <h1>Я еще не придумал</h1>\n          <h3>Мой дом — моя слабость</h3>\n\n          <div>\n            <p>\n            Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.\n            </p>\n          <div className='animated pulse infinite' id='cats'>{cats()}</div>\n          </div>\n            <div>\n            <h3>I'v had some experience with</h3>\n            <span>JS</span>\n            <span>jquery</span>\n            <span>React</span>\n            <span>Vue</span>\n            <span>C#</span>\n            <span>C++</span>\n            <span>Linux</span>\n            <span>PHP</span>\n            <span>Several CMS</span>\n            <span>Databases</span>\n            <span>Pattern recognition (Machine learning and data mining)</span>\n            </div>\n              <div className='contact'>\n              <span>\n                <a href=\"#\">\n                <i class=\"fas fa-at fa-lg\"></i>\n                </a>\n              </span>\n              <span>\n                <a target='_blank' rel='noopener noreferrer' href='https://t.me/sllq2'>\n                <i className=\"fab fa-telegram-plane fa-lg\"></i>\n                </a>\n              </span>\n              <span>\n                <a href='/cat'>{cats()}</a>\n              </span>\n              <span>\n                <a target='_blank' rel='noopener noreferrer' href='#'>\n                <i className=\"fab fa-linkedin-in fa-lg\"></i>\n                </a>\n              </span>\n              <span>\n                <a target='_blank' rel='noopener noreferrer' href='https://vk.com/is_no_spoon'>\n                <i className=\"fab fa-vk fa-lg\"></i>\n                </a>\n              </span>\n              </div>\n            </div>\n          </div>\n      </section>\n    </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from 'jquery';\nimport jQuery from 'jquery';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}